name: release
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ASPNETCORE_ENVIRONMENT: Production

jobs:
  build:
    name: Build .NET Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # all history for all branches and tags
      - name: Install dependencies and .NET sdk
        run: sudo add-apt-repository ppa:dotnet/backports && sudo apt-get update && sudo apt-get install -y tar dotnet-sdk-9.0
      - name: Install telegram bot library
        run: dotnet nuget add source https://pkgs.dev.azure.com/tgbots/Telegram.Bot/_packaging/release/nuget/v3/index.json -n Telegram.Bot
      - name: dotnet publish
        run: dotnet publish -c Release -r linux-x64 --self-contained true /p:PublishSingleFile=true /p:PublishTrimmed=false /p:EnableCompressionInSingleFile=true
      - name: Create tarball
        run: tar -czvf publish.tar.gz -C bin/Release/net9.0/linux-x64/publish/ .
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: publish-x86_64-self-contained
          path: publish.tar.gz
          compression-level: 9


  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Log in to Container registry
        uses: docker/login-action@v2
        with:
          registry: git.mahdium.ir
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      - name: Cache Docker layers
        id: cache-layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.ref }}-
            ${{ runner.os }}-buildx-

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: git.mahdium.ir/mahdium/cats-of-mastodon-telegram-bot
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
